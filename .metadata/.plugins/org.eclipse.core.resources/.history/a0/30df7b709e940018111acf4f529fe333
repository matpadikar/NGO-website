package com.RESngos.dao.imp1;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BatchPreparedStatementSetter;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.support.JdbcDaoSupport;
import org.springframework.stereotype.Repository;

import com.RESngos.dao.RestaurantDao;
import com.RESngos.model.Restaurant;

@Repository
public class RestaurantDaoImpl extends JdbcDaoSupport implements RestaurantDao{
	
	@Autowired 
	DataSource dataSource;
	
	@PostConstruct
	private void initialize(){
		setDataSource(dataSource);
	}
	
	//@Override
	public void insertRestaurant(Restaurant res) {
		String sql = "INSERT INTO Restaurant " +
				"(resId, resName, resAddress, resEmail, resOwner, resMob) VALUES (?, ?, ?, ?, ?, ?)" ;
		getJdbcTemplate().update(sql, new Object[]{
				res.getResId(), res.getResName()
		});
	}
	
	//@Override
	public void insertRestaurants(List<Restaurant> restaurants) {
		String sql = "INSERT INTO Restaurant " + "(resId, resName, resAddress, resEmail, resOwner, resMob) VALUES (?, ?, ?, ?, ?, ?)";
		getJdbcTemplate().batchUpdate(sql, new BatchPreparedStatementSetter() {
			public void setValues(PreparedStatement ps, int i) throws SQLException {
				Restaurant restaurant = restaurants.get(i);
				ps.setString(1, restaurant.getResId());
				ps.setString(2, restaurant.getResName());
			}
			
			public int getBatchSize() {
				return restaurants.size();
			}
		});

	}
	@Override
	public List<Employee> getAllEmployees(){
		String sql = "SELECT * FROM employee";
		List<Map<String, Object>> rows = getJdbcTemplate().queryForList(sql);
		
		List<Employee> result = new ArrayList<Employee>();
		for(Map<String, Object> row:rows){
			Employee emp = new Employee();
			emp.setEmpId((String)row.get("empId"));
			emp.setEmpName((String)row.get("empName"));
			result.add(emp);
		}
		
		return result;
	}

	@Override
	public Employee getEmployeeById(String empId) {
		String sql = "SELECT * FROM employee WHERE empId = ?";
		return (Employee)getJdbcTemplate().queryForObject(sql, new Object[]{empId}, new RowMapper<Employee>(){
			@Override
			public Employee mapRow(ResultSet rs, int rwNumber) throws SQLException {
				Employee emp = new Employee();
				emp.setEmpId(rs.getString("empId"));
				emp.setEmpName(rs.getString("empName"));
				return emp;
			}
		});
	}
}
public class RestaurantDaoImp1 {

}
